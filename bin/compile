#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

logger -p user.notice -t "slugc[$$]" "language_pack_java java_compile_start"

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
# parse args
BUILD_DIR=$1
CACHE_DIR=$2
LOGGER_FLAGS=""

curl --silent --location http://heroku-jvm-common.s3.amazonaws.com/jvm-buildpack-common.tar.gz | tar xz
. bin/java

# create default system.properties for apps that had the jdk vendored in 
if [ -f ${CACHE_DIR}/.jdk/vendor ] && [ ! -f ${BUILD_DIR}/system.properties ]; then
  echo "java.runtime.version=1.7" > ${BUILD_DIR}/system.properties
fi

if [ -f ${CACHE_DIR}/system.properties ] && [ ! -f ${BUILD_DIR}/system.properties ]; then
  cp ${CACHE_DIR}/system.properties ${BUILD_DIR}/system.properties
fi

if [ ! -d $CACHE_DIR ]; then
  LOGGER_FLAGS="$LOGGER_FLAGS new_java_app"
  logger -p user.notice -t "slugc[$$]" "language_pack_java new_java_app"
  if [ ! -f ${BUILD_DIR}/system.properties ]; then 
    echo "java.runtime.version=1.7" > ${BUILD_DIR}/system.properties; 
  fi
fi

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

# install JDK 
if [ -f ${BUILD_DIR}/system.properties ]; then
  logger -p user.notice -t "slugc[$$]" "language_pack_java download_jdk"
  LOGGER_FLAGS="$LOGGER_FLAGS download_jdk"
  javaVersion=$(detect_java_version ${BUILD_DIR})
  echo -n "-----> Installing OpenJDK ${javaVersion}..."
  install_java ${BUILD_DIR} ${javaVersion}
  echo "done"
  cp ${BUILD_DIR}/system.properties ${CACHE_DIR}/
fi


VERTX_URL="http://vertx.io/downloads/vert.x-1.3.0.final.tar.gz"

if [ -d "$CACHE_DIR/.vertx" ]; then
  echo -n "copying vertx to app instead of downloading"
  cp -r "$CACHE_DIR/.vertx" $BUILD_DIR
  echo "done"
fi

if [ ! -d "$BUILD_DIR/.vertx" ]; then
  cd $BUILD_DIR
  echo -n "-----> Installing Vert.x build (to .vertx)....."
  curl --max-time 320 --location $VERTX_URL | tar xz
  mv vert* .vertx
  cp -r .vertx $CACHE_DIR/.vertx
  echo "installed vert.x"
fi


logger -p user.notice -t "slugc[$$]" "language_pack_java java_compile_end $LOGGER_FLAGS"
